#include <stdio.h>
#include <time.h>

void merge(int a[], int l[], int r[], int n)
{
    int i=0, j=0, k=0, ls;
    ls = n/2;
    while (i<ls && j<n-ls)
    {
        if (l[i] < r[j])
        {
            a[k] = l[i];
            k++;
            i++;
        }
        else
        {
            a[k] = r[j];
            k++;
            j++;
        }
    }
    while (i<ls)
    {
        a[k] = l[i];
        k++;
        i++;
    }
    while (j<n-ls)
    {
        a[k] = r[j];
        k++;
        j++;
    }
}

void mergesort(int a[], int n)
{
    int lsize, rsize, left[50], right[50], i, j;
    if (n>1)
    {
        lsize = n/2;
        rsize = n-lsize;
        for (i=0;i<lsize;i++)
                left[i] = a[i];
        for (j=0;j<rsize;j++)
                right[j] = a[i++];
        mergesort (left, lsize);
        mergesort (right, rsize);
        merge (a, left, right, n);
    }
}

void main()
{
    int array[5000], i, n;
    clock_t start, end, total;
    printf ("\nManufacturing array\n");
    for (i=0;i<5000;i++)
        array[i] = rand();
    printf ("\nStarting sort\n");
    start = clock();
    mergesort(array, 5000);
    end = clock();
    printf ("\nCalculating time...\n");
    total = (double) end-start;
    printf ("\n----------Analysis Done----------\n");
    printf ("%lf\n", array[i]);
}
